on: issues

name: Create pull request from issue

jobs:
  run:
    name: Issue opened
    if: ${{ github.event_name == 'issues' && github.event.action == 'opened' }}
    runs-on: ubuntu-latest
    steps:
      # TODO extract URL from the issue body
      # TODO better make sure the URL is JSON?
      # TODO download URL from the issue body
      # TODO run the benchmark script with the right command

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build CI scripts
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --path ci

      - name: Run CI script
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: benchmark-database-ci test-github

      - name: Create dummy commits
        run: |
          git config user.name 'Christopher Obbard'
          git config user.email 'obbardc@users.noreply.github.com'
          mkdir -p scratch
          FILE="scratch/test-data-$RANDOM"
          echo "Test things!" > $FILE
          git add $FILE
          git commit -sm "Automated commit added by CI"

      - name: Create Pull Request
        id: create-pull-request
        uses: peter-evans/create-pull-request@v3
        with:
          title: 'Automated PR: ${{ github.event.issue.title }}'
          body: |
            Issue created by automation

            ${{ github.event.issue.body }}

            Closes: #${{ github.event.issue.number }}
          assignees: obbardc
          reviewers: obbardc
          labels: automated-pr-from-issue
          branch: auto/issue/${{ github.event.issue.number }}
          delete-branch: true

      - name: Comment on issue
        uses: actions/github-script@v3
        env:
          PULL_REQUEST_URL: ${{ steps.create-pull-request.outputs.pull-request-url }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thanks for your submission.\n\nPlease see ' + process.env.PULL_REQUEST_URL
            })
